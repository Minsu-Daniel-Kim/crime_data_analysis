table(crime[crime$Category == "PROSTITUTION", ]$DayOfWeek)
table(crime[crime$Category == "PROSTITUTION", ]$DayOfWeek)
table(crime[crime$Category == "PROSTITUTION", ]$DayOfWeek)
table(crime[crime$Category == "289", ]$DayOfWeek)
table(crime[crime$Category == "BRIBERY", ]$DayOfWeek)
table(crime[crime$Category == "DRUG/NARCOTIC", ]$DayOfWeek)
crime$Address
mapgilbert <- get_map(location = c(lon = mean(crime$X), lat = mean(crime$Y)), zoom = 11,
scale = 2)
# plotting the map with some points on it
ggmap(mapgilbert) +
geom_point(data = crime[1:1000, ], aes(x = X, y = Y, color = PdDistrict, fill = PdDistrict), alpha = 0.8, size = 2, shape = 21) +
guides(fill=FALSE, alpha=FALSE, size=FALSE)
table(crime$Address)
nrow(table(crime$Address))
strsplit(crime$Address, split = "of")
lapply(strsplit(crime$Address, split = "of"), function(x) {x[2]})
sapply(strsplit(crime$Address, split = "of"), function(x) {x[2]})
table(sapply(strsplit(crime$Address, split = "of"), function(x) {x[2]}))
unique(sapply(strsplit(crime$Address, split = "of"), function(x) {x[2]}))
nrow(unique(sapply(strsplit(crime$Address, split = "of"), function(x) {x[2]})))
length(unique(sapply(strsplit(crime$Address, split = "of"), function(x) {x[2]})))
crime$Address
nrow(crime$Address)
length(unique(sapply(strsplit(crime$Address, split = "of"), function(x) {x[2]})))
length(crime$Address)
nrow(crime)
table(crime$Address)
names(table(crime$Address))
table(crime$Address)
View(table(crime$Address))
nrow(View(table(crime$Address)))
nrow(table(crime$Address))
length(unique(sapply(strsplit(crime$Address, split = "of"), function(x) {x[2]})))
crime$Descript
nrow(crime$Descript)
library(dplyr)
grouop_category <- group_by(crime)
group_category <- group_by(crime)
group_category
summarise(group_category)
summarise(group_category, n())
summarise(group_category, DayOfWeek)
summarise(group_category, n())
group_category <- group_by(crime, Category)
summarise(group_category, n())
summarise(group_category, n(), 29)
summarise(group_category, n())
summarise(group_category, mean())
summarise(group_category, DayOfWeek)
summarise(group_category, DayOfWeek = n())
group_category
summarise(group_category)
summarise(group_category, DayOfWeek == "Wednesday")
group_category <- group_by(crime, Category, DayOfWeek)
group_category
summarise(group_category, n())
summarise(group_category, mean())
summarise(group_category, mean)
summarise(group_category, sum())
summarise(group_category, n())
group_category <- group_by(crime, Category)
group_Category_DayOfWeek <- group_by(crime, Category, DayOfWeek)
group_Category <- group_by(crime, Category)
summarise(group_Category_DayOfWeek, n())
summarise(group_Category_DayOfWeek, n())
?summarise
View(summarise(group_Category_DayOfWeek, n()))
crime
R.version
a <- "2015-3-15"
hmd(a)
ymd(a)
a <- "2015-15-3"
ydm(a)
crime
str(crime)
head(crime$Dates)
View(crime)
a <- head(crime)
a
a
a <- hour(crime$Dates)
a
crime$hour <- hour(crime$Dates)
crime$hour <- factor(hour(crime$Dates))
ggplot(crime, aes(x = hour)) + geom_bar(stat="identity")
ggplot(crime[crime$Category == "ARSON", ], aes(x = hour)) + geom_bar(stat="identity")
crime[crime$Category == "ARSON", ]
ggplot(crime[crime$Category == "ARSON", ], aes(x = hour)) + geom_line()
ggplot(crime[crime$Category == "ARSON", ], aes(x = hour, color = Category)) + geom_line()
ggplot(crime[crime$Category == "ARSON", ], aes(x = hour, color = Category)) + geom_bar()
ggplot(crime[crime$Category == "ARSON", ], aes(x = hour)) + geom_bar()
ggplot(crime[crime$Category == "ARSON", ], aes(x = hour)) + geom_line()
ggplot(crime[crime$Category == "ARSON", ], aes(x = hour)) + geom_bar()
ggplot(crime[crime$Category == "ARSON", ], aes(x = hour)) + geom_bar() + geom_line()
ggplot(crime[crime$Category == "ARSON", ], aes(x = hour)) + geom_bar()
levels(crime$Category)
sapply(levels(crime$Category), function(x) {print(x)})
sapply(levels(crime$Category), function(x) {print(x)})
sapply(levels(crime$Category), function(x) {x)
sapply(levels(crime$Category), function(x) {x})
sapply(levels(crime$Category), function(x) {x})
sapply(crime$Category, function(x) {x})
levels(crime$Category)
lvl <- levels(crime$Category)
lvl
for (i in 1:length(lvl)) {
print(i)
#ggplot(crime[crime$Category == "ARSON", ], aes(x = hour)) + geom_bar()
}
plotNCrimeBasedOnTime <- function() {
lvl <- levels(crime$Category)
for (i in 1:length(lvl)) {
print(lvl[i])
#ggplot(crime[crime$Category == "ARSON", ], aes(x = hour)) + geom_bar()
}
}
lvl <- levels(crime$Category)
for (i in 1:length(lvl)) {
print(lvl[i])
#ggplot(crime[crime$Category == "ARSON", ], aes(x = hour)) + geom_bar()
}
getwd()
endpoint <- getwd()
library(ggplot2)
endpoint <- getwd()
plotNCrimeBasedOnTime <- function() {
lvl <- levels(crime$Category)
for (i in 1:length(lvl)) {
png(paste0(endpoint, "/images/", lvl[i], "png"))
ggplot(crime[crime$Category == lvl[i], ], aes(x = hour)) + geom_bar() + ggtitle("The number of " + lvl[i] + " based on time")
dev.off()
}
}
plotNCrimeBasedOnTime()
library(ggplot2)
endpoint <- getwd()
plotNCrimeBasedOnTime <- function() {
lvl <- levels(crime$Category)
for (i in 1:length(lvl)) {
png(paste0(endpoint, "/images/", lvl[i], "png"))
ggplot(crime[crime$Category == lvl[i], ], aes(x = hour)) + geom_bar() + ggtitle(paste0("The number of ", lvl[i], " based on time"))
dev.off()
}
}
plotNCrimeBasedOnTime()
endpoint <- getwd()
endpoint
paste0(endpoint, "/images/", lvl[i], "png")
paste0(endpoint, "/images/", lvl[i], "png")
png(paste0(endpoint, "/images/", lvl[i], ".png"))
paste0(endpoint, "/images/", lvl[i], ".png")
library(ggplot2)
endpoint <- getwd()
plotNCrimeBasedOnTime <- function() {
lvl <- levels(crime$Category)
for (i in 1:length(lvl)) {
png(paste0(endpoint, "/images/", lvl[i], ".png"))
ggplot(crime[crime$Category == lvl[i], ], aes(x = hour)) + geom_bar() + ggtitle(paste0("The number of ", lvl[i], " based on time"))
dev.off()
}
}
plotNCrimeBasedOnTime()
png(paste0(endpoint, "/images/"," test", ".png"))
ggplot(crime[crime$Category == "ARSON", ], aes(x = hour)) + geom_bar() + ggtitle(paste0("The number of ", "ARSON", " based on time"))
dev.off()
png(paste0(endpoint, "/images/"," test df", ".png"))
ggplot(crime[crime$Category == "ARSON", ], aes(x = hour)) + geom_bar() + ggtitle(paste0("The number of ", "ARSON", " based on time"))
dev.off()
png(paste0(endpoint, "/images/"," test df", ".png"))
ggplot(crime[crime$Category == "ARSON", ], aes(x = hour)) + geom_bar() + ggtitle(paste0("The number of ", "ARSON", " based on time"))
dev.off()
png(paste0(endpoint, "/images/"," test_df", ".png"))
ggplot(crime[crime$Category == "ARSON", ], aes(x = hour)) + geom_bar() + ggtitle(paste0("The number of ", "ARSON", " based on time"))
dev.off()
library(ggplot2)
endpoint <- getwd()
plotNCrimeBasedOnTime <- function() {
lvl <- levels(crime$Category)
for (i in 1:length(lvl)) {
png(paste0(endpoint, "/images/", lvl[i], ".png"))
ggplot(crime[crime$Category == lvl[i], ], aes(x = hour)) + geom_bar() + ggtitle(paste0("The number of ", lvl[i], " based on time"))
dev.off()
}
}
plotNCrimeBasedOnTime()
plotNCrimeBasedOnTime
plotNCrimeBasedOnTime()
library(ggplot2)
endpoint <- getwd()
plotNCrimeBasedOnTime <- function() {
lvl <- levels(crime$Category)
for (i in 1:length(lvl)) {
print(lvl[i])
png(paste0(endpoint, "/images/", lvl[i], ".png"))
ggplot(crime[crime$Category == lvl[i], ], aes(x = hour)) + geom_bar() + ggtitle(paste0("The number of ", lvl[i], " based on time"))
dev.off()
}
}
plotNCrimeBasedOnTime()
paste0(endpoint, "/images/", lvl[i], ".png")
library(ggplot2)
endpoint <- getwd()
plotNCrimeBasedOnTime <- function() {
lvl <- levels(crime$Category)
for (i in 1:length(lvl)) {
print(lvl[i])
print(paste0(endpoint, "/images/", lvl[i], ".png"))
png(paste0(endpoint, "/images/", lvl[i], ".png"))
ggplot(crime[crime$Category == lvl[i], ], aes(x = hour)) + geom_bar() + ggtitle(paste0("The number of ", lvl[i], " based on time"))
dev.off()
}
}
#png(paste0(endpoint, "/images/"," test_df", ".png"))
#ggplot(crime[crime$Category == "ARSON", ], aes(x = hour)) + geom_bar() + ggtitle(paste0("The number of ", "ARSON", " based on time"))
#dev.off()
plotNCrimeBasedOnTime()
library(ggplot2)
endpoint <- getwd()
plotNCrimeBasedOnTime <- function() {
lvl <- levels(crime$Category)
for (i in 1:length(lvl)) {
print(lvl[i])
print(paste0(endpoint, "/images/", lvl[i], ".png"))
#png(paste0(endpoint, "/images/", lvl[i], ".png"))
ggplot(crime[crime$Category == lvl[i], ], aes(x = hour)) + geom_bar() + ggtitle(paste0("The number of ", lvl[i], " based on time"))
#dev.off()
}
}
#png(paste0(endpoint, "/images/"," test_df", ".png"))
#ggplot(crime[crime$Category == "ARSON", ], aes(x = hour)) + geom_bar() + ggtitle(paste0("The number of ", "ARSON", " based on time"))
#dev.off()
plotNCrimeBasedOnTime()
plot(crime)
library(ggplot2)
endpoint <- getwd()
plotNCrimeBasedOnTime <- function() {
lvl <- levels(crime$Category)
for (i in 1:length(lvl)) {
png(paste0(endpoint, "/images/", lvl[i], ".png"))
print(ggplot(crime[crime$Category == lvl[i], ], aes(x = hour)) + geom_bar() + ggtitle(paste0("The number of ", lvl[i], " based on time")))
dev.off()
}
}
plotNCrimeBasedOnTime()
library(ggplot2)
endpoint <- getwd()
plotNCrimeBasedOnTime <- function() {
lvl <- levels(crime$Category)
for (i in 1:length(lvl)) {
png(paste0(endpoint, "/images/", lvl[i], ".png"))
print(ggplot(crime[crime$Category == lvl[i], ], aes(x = hour)) + geom_bar() + ggtitle(paste0("The number of ", lvl[i], " based on time")))
dev.off()
}
}
plotNCrimeBasedOnTime()
grep("/", "DRUG/NARCOTIC")
grepl("/", "DRUG/NARCOTIC")
grepl("/", "DRUG/NARCOTIC")
if (grepl("/", "DRUG/NARCOTIC")) {
sub("/", "DRUG/NARCOTIC", "-")
}
sub("/", "DRUG/NARCOTIC", "-")
a<- sub("/", "DRUG/NARCOTIC", "-")
a
?sbu
?sub
a<- sub("/", "-", "DRUG/NARCOTIC")
a
library(ggplot2)
endpoint <- getwd()
plotNCrimeBasedOnTime <- function() {
lvl <- levels(crime$Category)
for (i in 1:length(lvl)) {
if (grepl("/", lvl[i])) {
lvl[i] <- sub("/", "-", lvl[i])
}
png(paste0(endpoint, "/images/", lvl[i], ".png"))
print(ggplot(crime[crime$Category == lvl[i], ], aes(x = hour)) + geom_bar() + ggtitle(paste0("The number of ", lvl[i], " based on time")))
dev.off()
}
}
plotNCrimeBasedOnTime()
library(ggplot2)
endpoint <- getwd()
plotNCrimeBasedOnTime <- function() {
lvl <- levels(crime$Category)
for (i in 1:length(lvl)) {
category <- lvl[i]
if (grepl("/", category)) {
category <- sub("/", "-", category)
}
png(paste0(endpoint, "/images/", category, ".png"))
print(ggplot(crime[crime$Category == category, ], aes(x = hour)) + geom_bar() + ggtitle(paste0("The number of ", lvl[i], " based on time")))
dev.off()
}
}
plotNCrimeBasedOnTime()
library(ggplot2)
endpoint <- getwd()
plotNCrimeBasedOnTime <- function() {
lvl <- levels(crime$Category)
for (i in 1:length(lvl)) {
category <- lvl[i]
if (grepl("/", category)) {
category <- sub("/", "-", category)
}
png(paste0(endpoint, "/images/", category, ".png"))
print(ggplot(crime[crime$Category == category, ], aes(x = hour)) + geom_bar() + ggtitle(paste0("The number of ", category, " based on time")))
dev.off()
}
}
plotNCrimeBasedOnTime()
library(ggplot2)
endpoint <- getwd()
plotNCrimeBasedOnTime <- function() {
lvl <- levels(crime$Category)
for (i in 1:length(lvl)) {
category <- lvl[i]
if (grepl("/", category)) {
category <- sub("/", "-", category)
}
print(category)
#    png(paste0(endpoint, "/images/", category, ".png"))
#   print(ggplot(crime[crime$Category == category, ], aes(x = hour)) + geom_bar() + ggtitle(paste0("The number of ", category, " based on time")))
#  dev.off()
}
}
plotNCrimeBasedOnTime()
library(ggplot2)
endpoint <- getwd()
plotNCrimeBasedOnTime <- function() {
lvl <- levels(crime$Category)
for (i in 1:length(lvl)) {
category <- lvl[i]
if (grepl("/", category)) {
category <- sub("/", "-", category)
}
print(category)
png(paste0(endpoint, "/images/", category, ".png"))
print(ggplot(crime[crime$Category == lvl[i], ], aes(x = hour)) + geom_bar() + ggtitle(paste0("The number of ", category, " based on time")))
dev.off()
}
}
plotNCrimeBasedOnTime()
dir.exists("image")
dir.exists("images")
endpoint <- getwd()
if (!dir.exists("images2")) {
dir.create("images2")
}
crime$Address
crime[crime$Address == "HYDE ST / OFARRELL ST", ]
nrow(crime[crime$Address == "HYDE ST / OFARRELL ST", ])
grep("HYDE ST", value = T)
grep("HYDE ST", crime, value = T)
grep("HYDE ST", crime$Address, value = T)
grep("HYDE ST", crime$Address, value = T)
nrow(grep("HYDE ST", crime$Address, value = T))
length(grep("HYDE ST", crime$Address, value = T))
nrow(crime[crime$Address == "HYDE ST / OFARRELL ST", ])
crime$Address
crime$Address
endpoint <- getwd()
endpoint
endpoint
strsplit(crime$Address, split = "/")
strsplit(crime$Address, split = "/")[2]
strsplit(crime$Address, split = "/")
select(crime, Address == "5TH ST / FOLSOM ST")
?select
filter(crime, Address == "5TH ST / FOLSOM ST")
nrow(filter(crime, Address == "5TH ST / FOLSOM ST"))
nrow(filter(crime, Address == "5TH ST / FOLSOM ST"))
select(crime, contains("5TH ST / FOLSOM ST"))
select(crime, contains("5TH ST"))
select(crime, contains("Address"))
filter(crime, Address == "5TH ST / FOLSOM ST")
nrow(filter(crime, Address == "5TH ST / FOLSOM ST"))
nrow(filter(crime, Address == "FOLSOM ST"))
grep("FOLSOM ST", crime$Address)
length(grep("FOLSOM ST", crime$Address))
grep("FOLSOM ST", crime$Address, value = T)
strsplit(crime$Address, split = "/")
library(stringr)
str_trim(" df")
View(crime$Address)
strsplit(crime$Address, split = "/")
strsplit(crime$Address, split = "of")
strsplit(crime$Address, split = "of")
getStreeName <- function(tokens) {
if (length(tokens) == 2) {
print("two")
} else {
print("two")
}
}
sapply(strsplit(crime$Address, split = "of"), FUN = getStreeName)
strsplit(crime$Address, split = "of")
head(strsplit(crime$Address, split = "of"))
a <- head(strsplit(crime$Address, split = "of"))
a
sapply(a, FUN = getStreeName)
getStreeName <- function(tokens) {
print(tokens)
if (length(tokens) == 2) {
print("two")
} else {
print("two")
}
}
sapply(a, FUN = getStreeName)
getStreeName <- function(tokens) {
print(tokens[2])
if (length(tokens) == 2) {
print("two")
} else {
print("two")
}
}
sapply(a, FUN = getStreeName)
ls
print(tokens[2])
getStreeName <- function(tokens) {
streat <- tokens[2]
if (is.na(streat)) {
print(tokens[1])
} else {
print(streat)
}
}
sapply(a, FUN = getStreeName)
getStreeName <- function(tokens) {
streat <- str_trim(tokens[2])
if (is.na(streat)) {
print(tokens[1])
} else {
print(streat)
}
}
sapply(a, FUN = getStreeName)
a
a
sapply(a, FUN = getStreeName)
getStreeName <- function(tokens) {
streat <- str_trim(tokens[2])
if (is.na(streat)) {
tokens[1]
} else {
streat
}
}
sapply(a, FUN = getStreeName)
streat <- sapply(strsplit(crime$Address, split = "of"), FUN = getStreeName)
getStreetName <- function(tokens) {
street <- str_trim(tokens[2])
if (is.na(street)) {
tokens[1]
} else {
street
}
}
getStreetName <- function(tokens) {
street <- str_trim(tokens[2])
if (is.na(street)) {
tokens[1]
} else {
street
}
}
street <- sapply(strsplit(crime$Address, split = "of"), FUN = getStreetName)
street
crime$street <- street
table(crime$street)
nrow(table(crime$street))
nrow(table(crime$Address))
length(table(crime$Address))
length(table(crime$Address))
length(table(crime$street))
filter(crime, Category = "ARSON")
filter(crime, Category == "ARSON")
filter(crime, Category == "ARSON")
str(crime)
crime$Descript <- factor(crime$Descript)
filter(crime, Category == "ARSON")$Descript
table(filter(crime, Category == "ARSON")$Descript)
crime[crime$Category == "ARSON", ]
crime[crime$Category == "ARSON", ]$Descript
table(crime[crime$Category == "ARSON", ]$Descript)
table(crime[crime$Category == "ARSON", ])
crime[crime$Category == "ARSON", ]$Descript
crime$Category
table(crime$Category)
sort(table(crime$Category), decreasing = T)
prop.table(table(crime$Category))
prop.table(table(crime$Category))
sort(prop.table(table(crime$Category)), decreasing = T)
sort(prop.table(table(crime$Category)), decreasing = T)
sort(table(crime$Category), decreasing = T)
sort(table(crime$Category), decreasing = T)
crime[crime$Category == "DRUG/NARCOTIC", ]$Descript
ggplot(crime, aes(x = hour, y = street)) + geom_bar()
ggplot(crime, aes(x = hour, y = street)) + geom_bar(stat = "identity")
crime[1:1000]
crime[1:1000,]
ggplot(crime[1:100,], aes(x = hour, y = street)) + geom_bar(stat = "identity")
ggplot(crime[1:100,], aes(x = hour, y = street)) + geom_line()
print(ggplot(crime[1:100,], aes(x = hour, y = street)) + geom_line())
ggplot(crime[1:100,], aes(x = hour)) + geom_bar()
library(ggplot2)
ggplot(crime[1:100,], aes(x = hour)) + geom_bar()
